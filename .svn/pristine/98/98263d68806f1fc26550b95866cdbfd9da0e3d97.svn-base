package com.zlt.system.service.impl;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.zlt.system.dao.HotelDao;
import com.zlt.system.dao.OtherDao;
import com.zlt.system.dao.ReimTypeTabDao;
import com.zlt.system.dao.ReimnumtabDao;
import com.zlt.system.dao.TrafficDao;
import com.zlt.system.dao.TravelDao;
import com.zlt.system.dao.impl.HotelDaoImpl;
import com.zlt.system.dao.impl.OtherDaoImpl;
import com.zlt.system.dao.impl.ReimTypeTabDaoImpl;
import com.zlt.system.dao.impl.ReimnumtabDaoImpl;
import com.zlt.system.dao.impl.TrafficDaoImpl;
import com.zlt.system.dao.impl.TravelDaoImpl;
import com.zlt.system.entity.Hotel;
import com.zlt.system.entity.Other;
import com.zlt.system.entity.ReimTypeTab;
import com.zlt.system.entity.Reimnumtab;
import com.zlt.system.entity.Traffic;
import com.zlt.system.entity.Travel;
import com.zlt.system.service.NewAppcationService;
/**
 * 报销申请的实现类
 * @author 米邓勇
 * @下午9:40:29
 */
public class NewApplicationServiceImpl implements NewAppcationService{
	HotelDao hd = new HotelDaoImpl();
	TravelDao tvd =new TravelDaoImpl();
	TrafficDao tfd = new TrafficDaoImpl();
	OtherDao od = new OtherDaoImpl();
	ReimnumtabDao rd = new ReimnumtabDaoImpl();
	ReimTypeTabDao rt = new ReimTypeTabDaoImpl();
	public static void main(String[] args) {
		NewApplicationServiceImpl na = new NewApplicationServiceImpl();
		//获取最近插入的报销信息
		Travel t = new Travel();
//		t = na.findMaxtravel();
//		System.out.println(t);
//		//向新增了数据的数据表中修改凭借后的指端名
//		Travel t1 = new Travel();
//		t1.setApp_abb("CL1");
//		t1.setTravel_id(1);
//		boolean fl = na.update(t1);
//		System.out.println("更新组合ID："+fl);
//		//获取该报销信息的具体报销类型
//		ReimTypeTab rt = new ReimTypeTab();
//		ReimTypeTab rt1 = new ReimTypeTab();
//		rt.setReim_id(t.getReim_id());
//		System.out.println(rt);
//		rt1 = na.findrei(rt);
//		System.out.println(rt1);
		//设置报销编号表中的报销编号数据
//		Reimnumtab rm = new Reimnumtab();
//		rm.setApp_id(t.getTravel_id());
//		rm.setApp_add( rt1.getReim_abb()+rm.getApp_id());
//		boolean flag = na.add(rm);
//		System.out.println(flag);
		DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
		Date date = null,date1=null,date2= new Date();
		Date temp = new Date();
		try {
			date = format1.parse("2017-04-05");
			date1 = format1.parse("2017-05-05");
			date2 = format1.parse("2017-05-05");
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		t.setTravel_id(111);
		t.setReim_id(1);
		t.setEmp_name("tjy");
 		t.setTravel_time(date2);
		t.setTravel_address("成都");
		t.setTravel_start(date);
		t.setTravel_end(date1);
		t.setTravel_date(30);
		t.setTravel_target("完成");
		t.setTravel_result("完美完成");
		t.setTravel_money(333);
		t.setTravel_remark("~~~");
		t.setTravel_title("呵呵");
		t.setDepartment_name("财务部");
		boolean flag1 = na.add(t);
		System.out.println(flag1);
	}
	/**
	 * 通过返回值判断数据是否插入成功
	 * @return boolean
	 * @param travel
	 */
	@Override
	public boolean add(Travel travel) {
		tvd.insert_NoID(travel);
		return false;
	}
	/**
	 * 通过返回值判断数据是否插入成功
	 * @return boolean
	 * @param traffic
	 */
	@Override
	public boolean add(Traffic traffic) {
		return tfd.insert_NoID(traffic);
	}
	/**
	 * 通过返回值判断数据是否插入成功
	 * @return boolean
	 * @param other
	 */
	@Override
	public boolean add(Other other) {
		return od.insert_NoID(other);
	}
	/**
	 * 通过返回值判断数据是否插入成功
	 * @return boolean
	 * @param hotel
	 */
	@Override
	public boolean add(Hotel hotel) {
		return hd.insert_NoID(hotel);
	}
	/**
	 * 通过返回值判断数据是否插入成功
	 * @return boolean
	 * @param rm
	 */
	@Override
	public boolean add(Reimnumtab rm) {
		return rd.insert_NoID(rm);
	}
	/**
	 * 通过id查询获取数据
	 * @return ReimTypeTab
	 * @param rt
	 */
	@Override
	public ReimTypeTab findrei(ReimTypeTab rt) {
		return this.rt.findById(rt.getReim_id());
	}
	/**
	 * 通过查询获取到最近添加的一条数据
	 * @return Travel
	 */
	@Override
	public Travel findMaxtravel() {
		// TODO Auto-generated method stub
		return tvd.findMaxId();
	}
	/**
	 * 通过查询获取到最近添加的一条数据
	 * @return Traffic
	 */
	@Override
	public Traffic findMaxtraffic() {
		// TODO Auto-generated method stub
		return tfd.findMaxId();
	}
	/**
	 * 通过查询获取到最近添加的一条数据
	 * @return Other
	 */
	@Override
	public Other findMaxother() {
		// TODO Auto-generated method stub
		return od.findMaxId();
	}
	/**
	 * 通过查询获取到最近添加的一条数据
	 * @return Hotel
	 */
	@Override
	public Hotel findMaxhotel() {
		// TODO Auto-generated method stub
		return hd.findMaxId();
	}
	@Override
	public boolean update(Travel travel) {
		// TODO Auto-generated method stub
		return tvd.updata_num(travel);
	}
	@Override
	public boolean update(Traffic traffic) {
		// TODO Auto-generated method stub
		return false;
	}
	@Override
	public boolean update(Other other) {
		// TODO Auto-generated method stub
		return false;
	}
	@Override
	public boolean update(Hotel hotel) {
		// TODO Auto-generated method stub
		return false;
	}
	




	

	

}
